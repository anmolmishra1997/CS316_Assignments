program : block_list

block_list : basic_block block_list
            | basic_block

basic_block : declaration
            | function
            | function_prototype

function : TYPE var LPAREN parameter_list RPAREN function_body
          | TYPE var LPAREN RPAREN function_body
          | VOID NAME LPAREN parameter_list RPAREN function_body
          | VOID NAME LPAREN RPAREN function_body

function_prototype : TYPE var LPAREN parameter_list RPAREN SEMICOLON
                  | TYPE var LPAREN RPAREN SEMICOLON
                  | VOID NAME LPAREN parameter_list RPAREN SEMICOLON
                  | VOID NAME LPAREN RPAREN SEMICOLON

parameter_list : TYPE var COMMA parameter_list
                | TYPE var

TYPE : INT
    | FLOAT

function_body : LCURLY stmt_list return_stmt RCURLY
              | body

return_stmt : RETURN
            | RETURN R2

body : LCURLY stmt_list RCURLY
        | LCURLY RCURLY

stmt_list : stmt stmt_list
            | stmt

stmt : matched_stmt
    |  unmatched_stmt

matched_stmt : assign
            | declaration
            | matched_decision
            | matched_loop

unmatched_stmt : unmatched_decision
                | unmatched_loop

assign : L1 EQUALS R1 SEMICOLON
        | L2 EQUALS R2 SEMICOLON

L1 : NAME

R1 : pid
    | NAME

L2 : STAR pid
    | STAR NAME

R2 : pid
    | NUMBER
    | NAME

R1 : R1 + ALLNUM
    | R1 - ALLNUM
    | R1 * ALLNUM %prec MULTIPLY
    | R1 / ALLNUM
    | ALLNUM + R1
    | ALLNUM - R1
    | ALLNUM * R1
    | ALLNUM / R1
    | R1 + R1
    | R1 - R1
    | R1 * R1
    | R1 / R1

R1 : -R1

R2 : R2 + R2
    | R2 - R2
    | R2 * R2
    | R2 / R2

R2 : -R2

ALLNUM : NUM
    | MINUS ALLNUM %prec UNARY

pid : STAR pid
    | AMPERSAND pid
    | STAR NAME
    | AMPERSAND NAME

declaration : TYPE varlist SEMICOLON

varlist : var COMMA varlist
        | var

var : STAR var
    | NAME

matched_loop : WHILE LPAREN condition RPAREN matched_stmt
            | WHILE LPAREN condition RPAREN body

unmatched_loop : WHILE LPAREN condition RPAREN unmatched_stmt

condition : condition && condition
          | condition || condition
          | NOT Condition

condition : R2 > R2
          | R2 < R2
          | R2 >= R2
          | R2 <= R2
          | R2 != R2
          | R2 == R2

matched_decision :  IF LPAREN condition RPAREN matched_stmt ELSE matched_stmt
        | IF LPAREN condition RPAREN matched_stmt ELSE body
        | IF LPAREN condition RPAREN body ELSE matched_stmt
        | IF LPAREN condition RPAREN body ELSE body

unmatched_decision : IF LPAREN condition RPAREN stmt
                  | IF LPAREN condition RPAREN body
                  | IF LPAREN condition RPAREN matched_stmt ELSE unmatched_stmt
                  | IF LPAREN condition RPAREN body ELSE unmatched_stmt
